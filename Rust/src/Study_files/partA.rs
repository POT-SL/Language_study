// 这是一个Rust的学习手册
// Rust函数开头为fn，程序开头是fn main()
fn main() {
    
    //
    // 第零章 变量和print
    //

    // print!是输出（不换行）
    print!("Hello!");
    // \n换行
    print!("\n");
    // println!是换行输出
    println!("Welcome to, Rust!");

    // 使用let创建常量
    let a = 5;
    // 使用let mut创建变量
    let mut b = 10;
    // 常量和变量都可以先创建再赋值
    // 
    let c;
    let mut d;
    c = 5;
    d = 10;
    // 但是常量赋值后不可更改
    // c = 20;  // (X) 不能更改常量c的值
    d = 20; // 可以更改变量d的值

    // rust会自动根据赋值设置变量类型
    // 当然也可以手动指定类型
    let e: i32 = 15; // 手动指定e为i32类型
    
    // 在rust中有多种原生变量类型：
    // int, uint, float, char, bool, tuple, array.
    
    // int有i8,i16,i32,i64,i128,isize多种类型：
    // i8: -128~127
    // i16: -32,768~32,767
    // i32: -2,147,483,648~2,147,483
    // i64: -9,223,372,036,854,775,808~9,223,372,036,854,775,807
    // i128: -170,141,183,460,469,231,731,687,303,715,884,105,728~170,141,183,460,469,231,731,687,303,715,884,105,727
    //
    // uint（无符号int）有u8,u16,u32,u64,u128,usize
    // u8: 0~255
    // u16: 0~65,535
    // u32: 0~4,294,967,295
    // u64: 0~18,446,744,073,709,551
    // u128: 0~340,282,366,920,938,463,463,374,607,431,768,211,455
    //
    // （int，uint创建时根据系统架构判断，x32则为i32/u32，x64则为i64/u64）
    // 
    // float有f32,f64
    // char是单字符类型，使用单引号''
    // bool是布尔类型，只会有true或false俩个值
    // tuple是元组类型，可以存放多个不同类型的值
    // array是数组类型，存放多个相同类型的值



}